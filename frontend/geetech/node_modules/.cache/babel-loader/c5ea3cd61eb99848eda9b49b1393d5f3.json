{"ast":null,"code":"import errorHandler from '../scripts/errorHandler.js';\nimport threeLogic from '../scripts/Three/threeLogic.js';\nimport * as THREE from 'three';\nexport default {\n  data() {},\n\n  methods: {\n    check() {\n      try {\n        const answ = new threeLogic(THREE);\n        console.log(answ);\n      } catch (e) {\n        errorHandler('', '', '', '');\n      }\n    }\n\n  }\n}; // async function callTL(){\n// try{\n//     const a = await new threeLogic();\n//     return a;\n// }\n// catch(e){\n//     errorHandler('ThreeContainer', 'callTL', e, 'canvas')\n// }\n// return null;\n// }","map":{"version":3,"mappings":"AAUA,OAAOA,YAAP,MAAyB,4BAAzB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,eAAe;AACXC,MAAI,GAAE,CAEL,CAHU;;AAIXC,SAAO,EAAC;AACJC,SAAK,GAAE;AACH,UAAG;AACC,cAAMC,IAAG,GAAI,IAAIL,UAAJ,CAAeC,KAAf,CAAb;AACAK,eAAO,CAACC,GAAR,CAAYF,IAAZ;AACJ,OAHA,CAIA,OAAMG,CAAN,EAAQ;AACJT,oBAAY,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAZ;AACJ;AACJ;;AATI;AAJG,CAAf,C,CAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","names":["errorHandler","threeLogic","THREE","data","methods","check","answ","console","log","e"],"sourceRoot":"","sources":["/home/neuromancer/projects/YodaTeam/frontend/geetech/src/components/Blocks/WorkAreaContainer/ThreeContainer.vue"],"sourcesContent":["<template>\n    <div class=\"threeContainerRoot\">\n        <button @click=\"check()\" >Загрузить</button>\n        <div class=\"canvasContainer\">\n            <canvas id=\"canvas\"></canvas>\n        </div>\n    </div>\n</template>\n\n<script>\nimport errorHandler from '../scripts/errorHandler.js';\nimport threeLogic from '../scripts/Three/threeLogic.js'\nimport * as THREE from 'three'\n\nexport default {\n    data(){\n\n    },\n    methods:{\n        check(){\n            try{\n                const answ = new threeLogic(THREE)\n                console.log(answ)\n            }\n            catch(e){\n                errorHandler('', '', '', '')\n            }\n        }\n    }\n}\n\n// async function callTL(){\n// try{\n//     const a = await new threeLogic();\n//     return a;\n// }\n// catch(e){\n//     errorHandler('ThreeContainer', 'callTL', e, 'canvas')\n// }\n// return null;\n// }\n\n</script>\n\n<style>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}