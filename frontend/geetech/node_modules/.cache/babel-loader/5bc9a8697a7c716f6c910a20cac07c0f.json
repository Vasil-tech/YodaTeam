{"ast":null,"code":"import errorHandler from '../scripts/errorHandler.js';\nimport threeLogic from '../scripts/Three/threeLogic.js';\nimport * as THREE from 'three';\nexport default {\n  data() {},\n\n  methods: {},\n  mounted: function () {\n    try {\n      const answ = new threeLogic(THREE);\n      console.log(answ);\n    } catch (e) {\n      errorHandler('ThreeContainer', 'mounted', e, 'canvas');\n    }\n  }\n};\n\nwindow.onresize = function () {\n  try {\n    const answ = new threeLogic(THREE);\n    console.log(answ);\n  } catch (e) {\n    errorHandler('ThreeContainer', 'onresize', e, 'canvas');\n  }\n};","map":{"version":3,"mappings":"AASA,OAAOA,YAAP,MAAyB,4BAAzB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,eAAe;AACXC,MAAI,GAAE,CAEL,CAHU;;AAIXC,SAAO,EAAC,EAJG;AAOXC,SAAO,EAAE,YAAU;AACf,QAAG;AACC,YAAMC,IAAG,GAAI,IAAIL,UAAJ,CAAeC,KAAf,CAAb;AACAK,aAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,KAHJ,CAIA,OAAMG,CAAN,EAAQ;AACJT,kBAAY,CAAC,gBAAD,EAAmB,SAAnB,EAA8BS,CAA9B,EAAiC,QAAjC,CAAZ;AACJ;AACJ;AAfW,CAAf;;AAkBAC,MAAM,CAACC,QAAP,GAAkB,YAAU;AACxB,MAAG;AACK,UAAML,IAAG,GAAI,IAAIL,UAAJ,CAAeC,KAAf,CAAb;AACAK,WAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,GAHR,CAII,OAAMG,CAAN,EAAQ;AACJT,gBAAY,CAAC,gBAAD,EAAmB,UAAnB,EAA+BS,CAA/B,EAAkC,QAAlC,CAAZ;AACJ;AACR,CARA","names":["errorHandler","threeLogic","THREE","data","methods","mounted","answ","console","log","e","window","onresize"],"sourceRoot":"","sources":["/home/neuromancer/projects/YodaTeam/frontend/geetech/src/components/Blocks/WorkAreaContainer/ThreeContainer.vue"],"sourcesContent":["<template>\n    <div class=\"threeContainerRoot\">\n        <div class=\"canvasContainer\">\n            <canvas id=\"canvas\"></canvas>\n        </div>\n    </div>\n</template>\n\n<script>\nimport errorHandler from '../scripts/errorHandler.js';\nimport threeLogic from '../scripts/Three/threeLogic.js'\nimport * as THREE from 'three'\n\nexport default {\n    data(){\n\n    },\n    methods:{\n\n    },\n    mounted: function(){\n        try{\n            const answ = new threeLogic(THREE)\n            console.log(answ)\n            }\n        catch(e){\n            errorHandler('ThreeContainer', 'mounted', e, 'canvas')\n        }\n    }\n}\n\nwindow.onresize = function(){\n    try{\n            const answ = new threeLogic(THREE)\n            console.log(answ)\n            }\n        catch(e){\n            errorHandler('ThreeContainer', 'onresize', e, 'canvas')\n        }\n}\n</script>\n\n<style>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}