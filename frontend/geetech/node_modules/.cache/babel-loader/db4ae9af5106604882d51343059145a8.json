{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"threeContainerRoot\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"canvasContainer\"\n}, [/*#__PURE__*/_createElementVNode(\"canvas\", {\n  id: \"canvas\"\n})], -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"p\", null, _toDisplayString($data.color), 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;AACSA,OAAK,EAAC;;;gCACPC,oBAEM,KAFN,EAEM;AAFDD,OAAK,EAAC;AAEL,CAFN,EAA4B,cACxBC,oBAA6B,QAA7B,EAA6B;AAArBC,IAAE,EAAC;AAAkB,CAA7B,CADwB,CAA5B;;AAAA;;;uBADJC,oBAKM,KALN,cAKM,CAJFC,UAIE,EADFH,oBAAgB,GAAhB,EAAgB,IAAhB,EAAgBI,iBAAXC,WAAW,CAAhB,EAAU;AAAA;AAAV,GACE,CALN","names":["class","_createElementVNode","id","_createElementBlock","_hoisted_2","_toDisplayString","$data"],"sourceRoot":"","sources":["/home/neuromancer/projects/YodaTeam/frontend/geetech/src/components/Blocks/WorkAreaContainer/ThreeContainer.vue"],"sourcesContent":["<template>\n    <div class=\"threeContainerRoot\">\n        <div class=\"canvasContainer\">\n            <canvas id=\"canvas\"></canvas>\n        </div>\n        <p>{{color}}</p>\n    </div>\n</template>\n\n<script>\nimport errorHandler from '../scripts/errorHandler.js';\nimport threeLogic from '../scripts/Three/threeLogic.js'\nimport * as THREE from 'three'\n\nexport default {\n    data(){\n        return{\n            color: \"purple\"\n        }\n    },\n    methods:{\n\n    },\n    mounted: function(){\n        start3d(THREE)\n    },\n    created(){\n        this.emitter.on(\"SceneBackgroundColor\", color => {\n            this.color = color; console.log(color)\n        })\n    }\n}\n\nfunction start3d(THREE, color = 'black'){\n    try{\n        //создание экземпляров \n        const answ = new threeLogic(THREE, color)\n        console.log(answ)\n        }\n    catch(e){\n        errorHandler('ThreeContainer', 'mounted', e, 'canvas')\n    }\n}\n\n// window.onresize = function(){\n//     try{\n//             const answ = new threeLogic(THREE)\n//             console.log(answ)\n//             }\n//         catch(e){\n//             errorHandler('ThreeContainer', 'onresize', e, 'canvas')\n//         }\n// }\n</script>\n\n<style>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}