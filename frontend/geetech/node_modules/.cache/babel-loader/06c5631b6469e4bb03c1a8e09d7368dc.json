{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"SceneParamRoot\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Смена цвета фона сцены\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  class: \"colorBar\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.changeColor('grey'))\n  }, \"серый\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.changeColor('red'))\n  }, \"красный\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => $options.changeColor('white'))\n  }, \"белый\")])]);\n}","map":{"version":3,"mappings":";;AACSA,OAAK,EAAC;;;gCACPC,oBAA6B,GAA7B,EAA6B,IAA7B,EAAG,wBAAH,EAAyB;AAAA;AAAzB;;;AACKD,OAAK,EAAC;;;uBAFfE,oBAOM,KAPN,cAOM,CANFC,UAME,EALFF,oBAIM,KAJN,cAIM,CAHFA,oBAAmD,QAAnD,EAAmD;AAA1CG,WAAK,sCAAEC,qBAAW,MAAX,CAAF;AAAqC,GAAnD,EAAqC,OAArC,CAGE,EAFFJ,oBAAoD,QAApD,EAAoD;AAA3CG,WAAK,sCAAEC,qBAAW,KAAX,CAAF;AAAsC,GAApD,EAAoC,SAApC,CAEE,EADFJ,oBAAoD,QAApD,EAAoD;AAA3CG,WAAK,sCAAEC,qBAAW,OAAX,CAAF;AAAsC,GAApD,EAAsC,OAAtC,CACE,CAJN,CAKE,CAPN","names":["class","_createElementVNode","_createElementBlock","_hoisted_2","onClick","$options"],"sourceRoot":"","sources":["/home/neuromancer/projects/YodaTeam/frontend/geetech/src/components/Blocks/ToolPanelContainer/Editor/EditParamContainer/SceneParam.vue"],"sourcesContent":["<template>\n    <div class=\"SceneParamRoot\">\n        <p>Смена цвета фона сцены</p>\n        <div class=\"colorBar\">\n            <button @click=\"changeColor('grey')\">серый</button>\n            <button @click=\"changeColor('red')\">красный</button>\n            <button @click=\"changeColor('white')\">белый</button>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default{\n    data(){\n\n    },\n    methods:{\n        changeColor(color){\n            try{\n                this.emitter.emit(\"SceneBackgroundColor\", color);\n            }\n            catch(e){\n                console.error('asufhkj'); //прокинуть обработчик ошибок\n            }\n        }\n    }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}