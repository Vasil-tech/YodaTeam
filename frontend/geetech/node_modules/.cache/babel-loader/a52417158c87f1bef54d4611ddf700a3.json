{"ast":null,"code":"import errorHandler from '../scripts/errorHandler.js';\nimport threeLogic from '../scripts/Three/threeLogic.js';\nimport * as THREE from 'three';\nimport { OrbitControl } from 'OrbitControl';\nexport default {\n  data() {\n    return {\n      color: \"black\",\n      OrbitControl: false\n    };\n  },\n\n  methods: {},\n  mounted: function () {\n    start3d(THREE);\n  },\n  created: function () {\n    this.emitter.on(\"SceneBackgroundColor\", color => {\n      start3d(THREE, color), this.color = color;\n    });\n    this.emitter.on(\"OrbitControlStatus\", orbValue => {\n      start3d(THREE, this.color, orbValue);\n    });\n  }\n};\n\nfunction start3d(THREE, color = 'black', orbCont = false) {\n  try {\n    //создание экземпляров \n    const answ = new threeLogic(THREE, color, orbCont);\n    console.log(answ);\n  } catch (e) {\n    errorHandler('ThreeContainer', 'mounted', e, 'canvas');\n  }\n} // window.onresize = function(){\n//     try{\n//             const answ = new threeLogic(THREE)\n//             console.log(answ)\n//             }\n//         catch(e){\n//             errorHandler('ThreeContainer', 'onresize', e, 'canvas')\n//         }\n// }","map":{"version":3,"mappings":"AASA,OAAOA,YAAP,MAAyB,4BAAzB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAAQC,YAAR,QAA2B,cAA3B;AACA,eAAe;AACXC,MAAI,GAAE;AACF,WAAM;AACFC,WAAK,EAAE,OADL;AAEFF,kBAAY,EAAE;AAFZ,KAAN;AAIH,GANU;;AAOXG,SAAO,EAAC,EAPG;AAUXC,SAAO,EAAE,YAAU;AACfC,WAAO,CAACN,KAAD,CAAP;AACH,GAZU;AAaXO,SAAO,EAAE,YAAU;AACf,SAAKC,OAAL,CAAaC,EAAb,CAAgB,sBAAhB,EAAwCN,KAAI,IAAK;AAC7CG,aAAO,CAACN,KAAD,EAAQG,KAAR,CAAP,EAAuB,KAAKA,KAAL,GAAYA,KAAnC;AACH,KAFD;AAGA,SAAKK,OAAL,CAAaC,EAAb,CAAgB,oBAAhB,EAAsCC,QAAO,IAAI;AAC7CJ,aAAO,CAACN,KAAD,EAAQ,KAAKG,KAAb,EAAoBO,QAApB,CAAP;AACH,KAFD;AAGJ;AApBW,CAAf;;AAuBA,SAASJ,OAAT,CAAiBN,KAAjB,EAAwBG,KAAI,GAAI,OAAhC,EAAyCQ,OAAO,GAAC,KAAjD,EAAuD;AACnD,MAAG;AACC;AACA,UAAMC,IAAG,GAAI,IAAIb,UAAJ,CAAeC,KAAf,EAAsBG,KAAtB,EAA6BQ,OAA7B,CAAb;AACAE,WAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,GAJJ,CAKA,OAAMG,CAAN,EAAQ;AACJjB,gBAAY,CAAC,gBAAD,EAAmB,SAAnB,EAA8BiB,CAA9B,EAAiC,QAAjC,CAAZ;AACJ;AACJ,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","names":["errorHandler","threeLogic","THREE","OrbitControl","data","color","methods","mounted","start3d","created","emitter","on","orbValue","orbCont","answ","console","log","e"],"sourceRoot":"","sources":["/home/neuromancer/projects/YodaTeam/frontend/geetech/src/components/Blocks/WorkAreaContainer/ThreeContainer.vue"],"sourcesContent":["<template>\n    <div class=\"threeContainerRoot\">\n        <div class=\"canvasContainer\">\n            <canvas id=\"canvas\"></canvas>\n        </div>\n    </div>\n</template>\n\n<script>\nimport errorHandler from '../scripts/errorHandler.js';\nimport threeLogic from '../scripts/Three/threeLogic.js'\nimport * as THREE from 'three'\nimport {OrbitControl} from 'OrbitControl'\nexport default {\n    data(){\n        return{\n            color: \"black\",\n            OrbitControl: false,\n        }\n    },\n    methods:{\n\n    },\n    mounted: function(){\n        start3d(THREE)\n    },\n    created: function(){\n        this.emitter.on(\"SceneBackgroundColor\", color => {\n            start3d(THREE, color), this.color= color\n        })\n        this.emitter.on(\"OrbitControlStatus\", orbValue =>{\n            start3d(THREE, this.color, orbValue)\n        })\n    }\n}\n\nfunction start3d(THREE, color = 'black', orbCont=false){\n    try{\n        //создание экземпляров \n        const answ = new threeLogic(THREE, color, orbCont)\n        console.log(answ)\n        }\n    catch(e){\n        errorHandler('ThreeContainer', 'mounted', e, 'canvas')\n    }\n}\n\n\n// window.onresize = function(){\n//     try{\n//             const answ = new threeLogic(THREE)\n//             console.log(answ)\n//             }\n//         catch(e){\n//             errorHandler('ThreeContainer', 'onresize', e, 'canvas')\n//         }\n// }\n</script>\n\n<style>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}