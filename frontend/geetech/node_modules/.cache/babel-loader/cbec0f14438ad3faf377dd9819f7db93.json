{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"threeContainerRoot\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"button\", null, \"Загрузить\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"canvasContainer\"\n}, [/*#__PURE__*/_createElementVNode(\"canvas\", {\n  id: \"canvas\"\n})], -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = [_hoisted_2, _hoisted_3];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_4);\n}","map":{"version":3,"mappings":";;AACSA,OAAK,EAAC;;;gCACPC,oBAA2B,QAA3B,EAA2B,IAA3B,EAAS,WAAT,EAAkB;AAAA;AAAlB;;gCACAA,oBAEM,KAFN,EAEM;AAFDD,OAAK,EAAC;AAEL,CAFN,EAA4B,cACxBC,oBAA6B,QAA7B,EAA6B;AAArBC,IAAE,EAAC;AAAkB,CAA7B,CADwB,CAA5B;;AAAA;;oBADAC,YACAC;;uBAFJC,oBAKM,KALN,cAKMC,UALN","names":["class","_createElementVNode","id","_hoisted_2","_hoisted_3","_createElementBlock","_hoisted_4"],"sourceRoot":"","sources":["/home/neuromancer/projects/YodaTeam/frontend/geetech/src/components/Blocks/WorkAreaContainer/ThreeContainer.vue"],"sourcesContent":["<template>\n    <div class=\"threeContainerRoot\">\n        <button >Загрузить</button>\n        <div class=\"canvasContainer\">\n            <canvas id=\"canvas\"></canvas>\n        </div>\n    </div>\n</template>\n\n<script>\n//import errorHandler from '../scripts/errorHandler.js';\nimport threeLogic from '../scripts/Three/threeLogic.js'\nimport { defineAsyncComponent } from 'vue'\nconst threeComonent = defineAsyncComponent(()=> {\n    return new Promise((resolve, reject) => {\n        const a = new threeLogic()\n        resolve(a)\n    })\n})\nconsole.log(threeComonent)\nexport default {\n    data(){\n\n    },\n    methods:{\n        // check(){\n        //     const answr = callTL();\n        //     console.log(answr);\n        // }\n    }\n}\n\n// async function callTL(){\n// try{\n//     const a = await new threeLogic();\n//     return a;\n// }\n// catch(e){\n//     errorHandler('ThreeContainer', 'callTL', e, 'canvas')\n// }\n// return null;\n// }\n\n</script>\n\n<style>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}