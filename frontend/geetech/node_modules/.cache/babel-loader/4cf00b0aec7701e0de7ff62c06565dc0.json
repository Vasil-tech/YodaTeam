{"ast":null,"code":"import errorHandler from '../scripts/errorHandler.js';\nimport threeLogic from '../scripts/Three/threeLogic.js';\nimport * as THREE from 'three';\nexport default {\n  data() {\n    return {\n      color: \"purple\"\n    };\n  },\n\n  methods: {},\n  mounted: function () {\n    start3d(THREE);\n  },\n\n  created() {\n    this.emitter.on(\"SceneBackgroundColor\", color => {\n      start3d(THREE, color);\n    });\n  }\n\n};\n\nfunction start3d(THREE, color = 'black') {\n  try {\n    //создание экземпляров \n    const answ = new threeLogic(THREE, color);\n    console.log(answ);\n  } catch (e) {\n    errorHandler('ThreeContainer', 'mounted', e, 'canvas');\n  }\n} // window.onresize = function(){\n//     try{\n//             const answ = new threeLogic(THREE)\n//             console.log(answ)\n//             }\n//         catch(e){\n//             errorHandler('ThreeContainer', 'onresize', e, 'canvas')\n//         }\n// }","map":{"version":3,"mappings":"AASA,OAAOA,YAAP,MAAyB,4BAAzB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,eAAe;AACXC,MAAI,GAAE;AACF,WAAM;AACFC,WAAK,EAAE;AADL,KAAN;AAGH,GALU;;AAMXC,SAAO,EAAC,EANG;AASXC,SAAO,EAAE,YAAU;AACfC,WAAO,CAACL,KAAD,CAAP;AACH,GAXU;;AAYXM,SAAO,GAAE;AACL,SAAKC,OAAL,CAAaC,EAAb,CAAgB,sBAAhB,EAAwCN,KAAI,IAAK;AAC7CG,aAAO,CAACL,KAAD,EAAQE,KAAR,CAAP;AACH,KAFD;AAGJ;;AAhBW,CAAf;;AAmBA,SAASG,OAAT,CAAiBL,KAAjB,EAAwBE,KAAI,GAAI,OAAhC,EAAwC;AACpC,MAAG;AACC;AACA,UAAMO,IAAG,GAAI,IAAIV,UAAJ,CAAeC,KAAf,EAAsBE,KAAtB,CAAb;AACAQ,WAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,GAJJ,CAKA,OAAMG,CAAN,EAAQ;AACJd,gBAAY,CAAC,gBAAD,EAAmB,SAAnB,EAA8Bc,CAA9B,EAAiC,QAAjC,CAAZ;AACJ;AACJ,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","names":["errorHandler","threeLogic","THREE","data","color","methods","mounted","start3d","created","emitter","on","answ","console","log","e"],"sourceRoot":"","sources":["/home/neuromancer/projects/YodaTeam/frontend/geetech/src/components/Blocks/WorkAreaContainer/ThreeContainer.vue"],"sourcesContent":["<template>\n    <div class=\"threeContainerRoot\">\n        <div class=\"canvasContainer\">\n            <canvas id=\"canvas\"></canvas>\n        </div>\n    </div>\n</template>\n\n<script>\nimport errorHandler from '../scripts/errorHandler.js';\nimport threeLogic from '../scripts/Three/threeLogic.js'\nimport * as THREE from 'three'\n\nexport default {\n    data(){\n        return{\n            color: \"purple\"\n        }\n    },\n    methods:{\n\n    },\n    mounted: function(){\n        start3d(THREE)\n    },\n    created(){\n        this.emitter.on(\"SceneBackgroundColor\", color => {\n            start3d(THREE, color)\n        })\n    }\n}\n\nfunction start3d(THREE, color = 'black'){\n    try{\n        //создание экземпляров \n        const answ = new threeLogic(THREE, color)\n        console.log(answ)\n        }\n    catch(e){\n        errorHandler('ThreeContainer', 'mounted', e, 'canvas')\n    }\n}\n\n// window.onresize = function(){\n//     try{\n//             const answ = new threeLogic(THREE)\n//             console.log(answ)\n//             }\n//         catch(e){\n//             errorHandler('ThreeContainer', 'onresize', e, 'canvas')\n//         }\n// }\n</script>\n\n<style>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}