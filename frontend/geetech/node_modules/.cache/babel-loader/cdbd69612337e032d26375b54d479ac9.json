{"ast":null,"code":"import threeLogic from '../scripts/Three/threeLogic.js';\nimport * as THREE from 'three'; //import OrbitControl from 'three-orbitcontrols'\n\nexport default {\n  data() {\n    return {\n      color: \"black\",\n      orbValue: false\n    };\n  },\n\n  methods: {},\n  mounted: function () {\n    start3d(THREE);\n  },\n  created: function () {\n    this.emitter.on(\"SceneBackgroundColor\", color => {\n      start3d(THREE, color, this.orbValue), this.color = color;\n    });\n    this.emitter.on(\"OrbitControlStatus\", orbValue => {\n      start3d(THREE, this.color, this.orbValue = orbValue);\n    });\n    this.emitter.on(\"RotateOn\", data => {\n      start3d(THREE, this.color, this.orbValue, data);\n    });\n  }\n};\n\nfunction start3d(THREE, color = 'black', orbCont, autoRotate) {\n  try {\n    console.log(orbCont); //создание экземпляров \n\n    const answ = new threeLogic(THREE, color, orbCont, autoRotate);\n    console.log(answ, orbCont);\n  } catch (e) {\n    this.emitter.emit(\"CanvasError\", {\n      'file': 'ThreeContainer',\n      'method': 'start3d',\n      'ext': e\n    });\n  }\n} // window.onresize = function(){\n//     try{\n//         start3d(THREE, this.color, this.orbValue)\n//     }\n//     catch(e){\n//         errorHandler('ThreeContainer', 'onresize', e, 'canvas')\n//     }\n// }","map":{"version":3,"mappings":"AASA,OAAOA,UAAP,MAAuB,gCAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CACA;;AACA,eAAe;AACXC,MAAI,GAAE;AACF,WAAM;AACFC,WAAK,EAAE,OADL;AAEFC,cAAQ,EAAE;AAFR,KAAN;AAIH,GANU;;AAOXC,SAAO,EAAC,EAPG;AAUXC,SAAO,EAAE,YAAU;AACfC,WAAO,CAACN,KAAD,CAAP;AACH,GAZU;AAaXO,SAAO,EAAE,YAAU;AACf,SAAKC,OAAL,CAAaC,EAAb,CAAgB,sBAAhB,EAAwCP,KAAI,IAAK;AAC7CI,aAAO,CAACN,KAAD,EAAQE,KAAR,EAAe,KAAKC,QAApB,CAAP,EAAsC,KAAKD,KAAL,GAAYA,KAAlD;AACH,KAFD;AAGA,SAAKM,OAAL,CAAaC,EAAb,CAAgB,oBAAhB,EAAsCN,QAAO,IAAI;AAC7CG,aAAO,CAACN,KAAD,EAAQ,KAAKE,KAAb,EAAoB,KAAKC,QAAL,GAAgBA,QAApC,CAAP;AACH,KAFD;AAGA,SAAKK,OAAL,CAAaC,EAAb,CAAgB,UAAhB,EAA4BR,IAAI,IAAG;AAC/BK,aAAO,CAACN,KAAD,EAAQ,KAAKE,KAAb,EAAoB,KAAKC,QAAzB,EAAmCF,IAAnC,CAAP;AACH,KAFD;AAGJ;AAvBW,CAAf;;AA0BA,SAASK,OAAT,CAAiBN,KAAjB,EAAwBE,KAAI,GAAI,OAAhC,EAAyCQ,OAAzC,EAAkDC,UAAlD,EAA6D;AACzD,MAAG;AACCC,WAAO,CAACC,GAAR,CAAYH,OAAZ,EADD,CAEC;;AACA,UAAMI,IAAG,GAAI,IAAIf,UAAJ,CAAeC,KAAf,EAAsBE,KAAtB,EAA6BQ,OAA7B,EAAsCC,UAAtC,CAAb;AACAC,WAAO,CAACC,GAAR,CAAYC,IAAZ,EAAkBJ,OAAlB;AACA,GALJ,CAMA,OAAMK,CAAN,EAAQ;AACJ,SAAKP,OAAL,CAAaQ,IAAb,CAAkB,aAAlB,EAAiC;AAAC,cAAQ,gBAAT;AAA2B,gBAAS,SAApC;AAA+C,aAAMD;AAArD,KAAjC;AAEJ;AACJ,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","names":["threeLogic","THREE","data","color","orbValue","methods","mounted","start3d","created","emitter","on","orbCont","autoRotate","console","log","answ","e","emit"],"sourceRoot":"","sources":["/home/neuromancer/projects/YodaTeam/frontend/geetech/src/components/Blocks/WorkAreaContainer/ThreeContainer.vue"],"sourcesContent":["<template>\n    <div class=\"threeContainerRoot\">\n        <div class=\"canvasContainer\">\n            <canvas id=\"canvas\"></canvas>\n        </div>\n    </div>\n</template>\n\n<script>\nimport threeLogic from '../scripts/Three/threeLogic.js'\nimport * as THREE from 'three'\n//import OrbitControl from 'three-orbitcontrols'\nexport default {\n    data(){\n        return{\n            color: \"black\",\n            orbValue: false,\n        }\n    },\n    methods:{\n\n    },\n    mounted: function(){\n        start3d(THREE)\n    },\n    created: function(){\n        this.emitter.on(\"SceneBackgroundColor\", color => {\n            start3d(THREE, color, this.orbValue), this.color= color\n        })\n        this.emitter.on(\"OrbitControlStatus\", orbValue =>{\n            start3d(THREE, this.color, this.orbValue = orbValue)\n        })\n        this.emitter.on(\"RotateOn\", data=> {\n            start3d(THREE, this.color, this.orbValue, data)\n        })\n    }\n}\n\nfunction start3d(THREE, color = 'black', orbCont, autoRotate){\n    try{\n        console.log(orbCont)\n        //создание экземпляров \n        const answ = new threeLogic(THREE, color, orbCont, autoRotate)\n        console.log(answ, orbCont)\n        }\n    catch(e){\n        this.emitter.emit(\"CanvasError\", {'file': 'ThreeContainer', 'method':'start3d', 'ext':e})\n\n    }\n}\n\n\n// window.onresize = function(){\n//     try{\n//         start3d(THREE, this.color, this.orbValue)\n//     }\n//     catch(e){\n//         errorHandler('ThreeContainer', 'onresize', e, 'canvas')\n//     }\n// }\n</script>\n\n<style>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}