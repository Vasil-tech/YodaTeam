{"ast":null,"code":"/* three-orbitcontrols addendum */\nvar THREE = require('three');\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n * @author ScieCode / http://github.com/sciecode\n */\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\n\nTHREE.OrbitControls = function (object, domElement) {\n  if (domElement === undefined) console.warn('THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.');\n  if (domElement === document) console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n  this.object = object;\n  this.domElement = domElement; // Set to false to disable this control\n\n  this.enabled = true; // \"target\" sets the location of focus, where the object orbits around\n\n  this.target = new THREE.Vector3(); // How far you can dolly in and out ( PerspectiveCamera only )\n\n  this.minDistance = 0;\n  this.maxDistance = Infinity; // How far you can zoom in and out ( OrthographicCamera only )\n\n  this.minZoom = 0;\n  this.maxZoom = Infinity; // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n\n  this.minPolarAngle = 0; // radians\n\n  this.maxPolarAngle = Math.PI; // radians\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\n  this.minAzimuthAngle = -Infinity; // radians\n\n  this.maxAzimuthAngle = Infinity; // radians\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n\n  this.enableDamping = false;\n  this.dampingFactor = 0.05; // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n\n  this.enableZoom = true;\n  this.zoomSpeed = 1.0; // Set to false to disable rotating\n\n  this.enableRotate = true;\n  this.rotateSpeed = 1.0; // Set to false to disable panning\n\n  this.enablePan = true;\n  this.panSpeed = 1.0;\n  this.screenSpacePanning = false; // if true, pan in screen-space\n\n  this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n\n  this.autoRotate = false;\n  this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n  // Set to false to disable use of the keys\n\n  this.enableKeys = true; // The four arrow keys\n\n  this.keys = {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    BOTTOM: 40\n  }; // Mouse buttons\n\n  this.mouseButtons = {\n    LEFT: THREE.MOUSE.ROTATE,\n    MIDDLE: THREE.MOUSE.DOLLY,\n    RIGHT: THREE.MOUSE.PAN\n  }; // Touch fingers\n\n  this.touches = {\n    ONE: THREE.TOUCH.ROTATE,\n    TWO: THREE.TOUCH.DOLLY_PAN\n  }; // for reset\n\n  this.target0 = this.target.clone();\n  this.position0 = this.object.position.clone();\n  this.zoom0 = this.object.zoom; //\n  // public methods\n  //\n\n  this.getPolarAngle = function () {\n    return spherical.phi;\n  };\n\n  this.getAzimuthalAngle = function () {\n    return spherical.theta;\n  };\n\n  this.saveState = function () {\n    scope.target0.copy(scope.target);\n    scope.position0.copy(scope.object.position);\n    scope.zoom0 = scope.object.zoom;\n  };\n\n  this.reset = function () {\n    scope.target.copy(scope.target0);\n    scope.object.position.copy(scope.position0);\n    scope.object.zoom = scope.zoom0;\n    scope.object.updateProjectionMatrix();\n    scope.dispatchEvent(changeEvent);\n    scope.update();\n    state = STATE.NONE;\n  }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n  this.update = function () {\n    var offset = new THREE.Vector3(); // so camera.up is the orbit axis\n\n    var quat = new THREE.Quaternion().setFromUnitVectors(object.up, new THREE.Vector3(0, 1, 0));\n    var quatInverse = quat.clone().inverse();\n    var lastPosition = new THREE.Vector3();\n    var lastQuaternion = new THREE.Quaternion();\n    return function update() {\n      var position = scope.object.position;\n      offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n      offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n      spherical.setFromVector3(offset);\n\n      if (scope.autoRotate && state === STATE.NONE) {\n        rotateLeft(getAutoRotationAngle());\n      }\n\n      if (scope.enableDamping) {\n        spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n        spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n      } else {\n        spherical.theta += sphericalDelta.theta;\n        spherical.phi += sphericalDelta.phi;\n      } // restrict theta to be between desired limits\n\n\n      spherical.theta = Math.max(scope.minAzimuthAngle, Math.min(scope.maxAzimuthAngle, spherical.theta)); // restrict phi to be between desired limits\n\n      spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n      spherical.makeSafe();\n      spherical.radius *= scale; // restrict radius to be between desired limits\n\n      spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n      if (scope.enableDamping === true) {\n        scope.target.addScaledVector(panOffset, scope.dampingFactor);\n      } else {\n        scope.target.add(panOffset);\n      }\n\n      offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n      offset.applyQuaternion(quatInverse);\n      position.copy(scope.target).add(offset);\n      scope.object.lookAt(scope.target);\n\n      if (scope.enableDamping === true) {\n        sphericalDelta.theta *= 1 - scope.dampingFactor;\n        sphericalDelta.phi *= 1 - scope.dampingFactor;\n        panOffset.multiplyScalar(1 - scope.dampingFactor);\n      } else {\n        sphericalDelta.set(0, 0, 0);\n        panOffset.set(0, 0, 0);\n      }\n\n      scale = 1; // update condition is:\n      // min(camera displacement, camera rotation in radians)^2 > EPS\n      // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n      if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n        scope.dispatchEvent(changeEvent);\n        lastPosition.copy(scope.object.position);\n        lastQuaternion.copy(scope.object.quaternion);\n        zoomChanged = false;\n        return true;\n      }\n\n      return false;\n    };\n  }();\n\n  this.dispose = function () {\n    scope.domElement.removeEventListener('contextmenu', onContextMenu, false);\n    scope.domElement.removeEventListener('mousedown', onMouseDown, false);\n    scope.domElement.removeEventListener('wheel', onMouseWheel, false);\n    scope.domElement.removeEventListener('touchstart', onTouchStart, false);\n    scope.domElement.removeEventListener('touchend', onTouchEnd, false);\n    scope.domElement.removeEventListener('touchmove', onTouchMove, false);\n    document.removeEventListener('mousemove', onMouseMove, false);\n    document.removeEventListener('mouseup', onMouseUp, false);\n    scope.domElement.removeEventListener('keydown', onKeyDown, false); //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n  }; //\n  // internals\n  //\n\n\n  var scope = this;\n  var changeEvent = {\n    type: 'change'\n  };\n  var startEvent = {\n    type: 'start'\n  };\n  var endEvent = {\n    type: 'end'\n  };\n  var STATE = {\n    NONE: -1,\n    ROTATE: 0,\n    DOLLY: 1,\n    PAN: 2,\n    TOUCH_ROTATE: 3,\n    TOUCH_PAN: 4,\n    TOUCH_DOLLY_PAN: 5,\n    TOUCH_DOLLY_ROTATE: 6\n  };\n  var state = STATE.NONE;\n  var EPS = 0.000001; // current position in spherical coordinates\n\n  var spherical = new THREE.Spherical();\n  var sphericalDelta = new THREE.Spherical();\n  var scale = 1;\n  var panOffset = new THREE.Vector3();\n  var zoomChanged = false;\n  var rotateStart = new THREE.Vector2();\n  var rotateEnd = new THREE.Vector2();\n  var rotateDelta = new THREE.Vector2();\n  var panStart = new THREE.Vector2();\n  var panEnd = new THREE.Vector2();\n  var panDelta = new THREE.Vector2();\n  var dollyStart = new THREE.Vector2();\n  var dollyEnd = new THREE.Vector2();\n  var dollyDelta = new THREE.Vector2();\n\n  function getAutoRotationAngle() {\n    return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n  }\n\n  function getZoomScale() {\n    return Math.pow(0.95, scope.zoomSpeed);\n  }\n\n  function rotateLeft(angle) {\n    sphericalDelta.theta -= angle;\n  }\n\n  function rotateUp(angle) {\n    sphericalDelta.phi -= angle;\n  }\n\n  var panLeft = function () {\n    var v = new THREE.Vector3();\n    return function panLeft(distance, objectMatrix) {\n      v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n      v.multiplyScalar(-distance);\n      panOffset.add(v);\n    };\n  }();\n\n  var panUp = function () {\n    var v = new THREE.Vector3();\n    return function panUp(distance, objectMatrix) {\n      if (scope.screenSpacePanning === true) {\n        v.setFromMatrixColumn(objectMatrix, 1);\n      } else {\n        v.setFromMatrixColumn(objectMatrix, 0);\n        v.crossVectors(scope.object.up, v);\n      }\n\n      v.multiplyScalar(distance);\n      panOffset.add(v);\n    };\n  }(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n  var pan = function () {\n    var offset = new THREE.Vector3();\n    return function pan(deltaX, deltaY) {\n      var element = scope.domElement;\n\n      if (scope.object.isPerspectiveCamera) {\n        // perspective\n        var position = scope.object.position;\n        offset.copy(position).sub(scope.target);\n        var targetDistance = offset.length(); // half of the fov is center to top of screen\n\n        targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\n\n        panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n        panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n      } else if (scope.object.isOrthographicCamera) {\n        // orthographic\n        panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n        panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n      } else {\n        // camera neither orthographic nor perspective\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n        scope.enablePan = false;\n      }\n    };\n  }();\n\n  function dollyIn(dollyScale) {\n    if (scope.object.isPerspectiveCamera) {\n      scale /= dollyScale;\n    } else if (scope.object.isOrthographicCamera) {\n      scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n    } else {\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n      scope.enableZoom = false;\n    }\n  }\n\n  function dollyOut(dollyScale) {\n    if (scope.object.isPerspectiveCamera) {\n      scale *= dollyScale;\n    } else if (scope.object.isOrthographicCamera) {\n      scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n    } else {\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n      scope.enableZoom = false;\n    }\n  } //\n  // event callbacks - update the object state\n  //\n\n\n  function handleMouseDownRotate(event) {\n    rotateStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseDownDolly(event) {\n    dollyStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseDownPan(event) {\n    panStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseMoveRotate(event) {\n    rotateEnd.set(event.clientX, event.clientY);\n    rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n    var element = scope.domElement;\n    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n    rotateStart.copy(rotateEnd);\n    scope.update();\n  }\n\n  function handleMouseMoveDolly(event) {\n    dollyEnd.set(event.clientX, event.clientY);\n    dollyDelta.subVectors(dollyEnd, dollyStart);\n\n    if (dollyDelta.y > 0) {\n      dollyIn(getZoomScale());\n    } else if (dollyDelta.y < 0) {\n      dollyOut(getZoomScale());\n    }\n\n    dollyStart.copy(dollyEnd);\n    scope.update();\n  }\n\n  function handleMouseMovePan(event) {\n    panEnd.set(event.clientX, event.clientY);\n    panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n    pan(panDelta.x, panDelta.y);\n    panStart.copy(panEnd);\n    scope.update();\n  }\n\n  function\n    /*event*/\n  handleMouseUp() {// no-op\n  }\n\n  function handleMouseWheel(event) {\n    if (event.deltaY < 0) {\n      dollyOut(getZoomScale());\n    } else if (event.deltaY > 0) {\n      dollyIn(getZoomScale());\n    }\n\n    scope.update();\n  }\n\n  function handleKeyDown(event) {\n    var needsUpdate = false;\n\n    switch (event.keyCode) {\n      case scope.keys.UP:\n        pan(0, scope.keyPanSpeed);\n        needsUpdate = true;\n        break;\n\n      case scope.keys.BOTTOM:\n        pan(0, -scope.keyPanSpeed);\n        needsUpdate = true;\n        break;\n\n      case scope.keys.LEFT:\n        pan(scope.keyPanSpeed, 0);\n        needsUpdate = true;\n        break;\n\n      case scope.keys.RIGHT:\n        pan(-scope.keyPanSpeed, 0);\n        needsUpdate = true;\n        break;\n    }\n\n    if (needsUpdate) {\n      // prevent the browser from scrolling on cursor keys\n      event.preventDefault();\n      scope.update();\n    }\n  }\n\n  function handleTouchStartRotate(event) {\n    if (event.touches.length == 1) {\n      rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      rotateStart.set(x, y);\n    }\n  }\n\n  function handleTouchStartPan(event) {\n    if (event.touches.length == 1) {\n      panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      panStart.set(x, y);\n    }\n  }\n\n  function handleTouchStartDolly(event) {\n    var dx = event.touches[0].pageX - event.touches[1].pageX;\n    var dy = event.touches[0].pageY - event.touches[1].pageY;\n    var distance = Math.sqrt(dx * dx + dy * dy);\n    dollyStart.set(0, distance);\n  }\n\n  function handleTouchStartDollyPan(event) {\n    if (scope.enableZoom) handleTouchStartDolly(event);\n    if (scope.enablePan) handleTouchStartPan(event);\n  }\n\n  function handleTouchStartDollyRotate(event) {\n    if (scope.enableZoom) handleTouchStartDolly(event);\n    if (scope.enableRotate) handleTouchStartRotate(event);\n  }\n\n  function handleTouchMoveRotate(event) {\n    if (event.touches.length == 1) {\n      rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      rotateEnd.set(x, y);\n    }\n\n    rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n    var element = scope.domElement;\n    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n    rotateStart.copy(rotateEnd);\n  }\n\n  function handleTouchMovePan(event) {\n    if (event.touches.length == 1) {\n      panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      panEnd.set(x, y);\n    }\n\n    panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n    pan(panDelta.x, panDelta.y);\n    panStart.copy(panEnd);\n  }\n\n  function handleTouchMoveDolly(event) {\n    var dx = event.touches[0].pageX - event.touches[1].pageX;\n    var dy = event.touches[0].pageY - event.touches[1].pageY;\n    var distance = Math.sqrt(dx * dx + dy * dy);\n    dollyEnd.set(0, distance);\n    dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n    dollyIn(dollyDelta.y);\n    dollyStart.copy(dollyEnd);\n  }\n\n  function handleTouchMoveDollyPan(event) {\n    if (scope.enableZoom) handleTouchMoveDolly(event);\n    if (scope.enablePan) handleTouchMovePan(event);\n  }\n\n  function handleTouchMoveDollyRotate(event) {\n    if (scope.enableZoom) handleTouchMoveDolly(event);\n    if (scope.enableRotate) handleTouchMoveRotate(event);\n  }\n\n  function\n    /*event*/\n  handleTouchEnd() {// no-op\n  } //\n  // event handlers - FSM: listen for events and reset state\n  //\n\n\n  function onMouseDown(event) {\n    if (scope.enabled === false) return; // Prevent the browser from scrolling.\n\n    event.preventDefault(); // Manually set the focus since calling preventDefault above\n    // prevents the browser from setting it automatically.\n\n    scope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n    switch (event.button) {\n      case 0:\n        switch (scope.mouseButtons.LEFT) {\n          case THREE.MOUSE.ROTATE:\n            if (event.ctrlKey || event.metaKey || event.shiftKey) {\n              if (scope.enablePan === false) return;\n              handleMouseDownPan(event);\n              state = STATE.PAN;\n            } else {\n              if (scope.enableRotate === false) return;\n              handleMouseDownRotate(event);\n              state = STATE.ROTATE;\n            }\n\n            break;\n\n          case THREE.MOUSE.PAN:\n            if (event.ctrlKey || event.metaKey || event.shiftKey) {\n              if (scope.enableRotate === false) return;\n              handleMouseDownRotate(event);\n              state = STATE.ROTATE;\n            } else {\n              if (scope.enablePan === false) return;\n              handleMouseDownPan(event);\n              state = STATE.PAN;\n            }\n\n            break;\n\n          default:\n            state = STATE.NONE;\n        }\n\n        break;\n\n      case 1:\n        switch (scope.mouseButtons.MIDDLE) {\n          case THREE.MOUSE.DOLLY:\n            if (scope.enableZoom === false) return;\n            handleMouseDownDolly(event);\n            state = STATE.DOLLY;\n            break;\n\n          default:\n            state = STATE.NONE;\n        }\n\n        break;\n\n      case 2:\n        switch (scope.mouseButtons.RIGHT) {\n          case THREE.MOUSE.ROTATE:\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n            break;\n\n          case THREE.MOUSE.PAN:\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n            break;\n\n          default:\n            state = STATE.NONE;\n        }\n\n        break;\n    }\n\n    if (state !== STATE.NONE) {\n      document.addEventListener('mousemove', onMouseMove, false);\n      document.addEventListener('mouseup', onMouseUp, false);\n      scope.dispatchEvent(startEvent);\n    }\n  }\n\n  function onMouseMove(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault();\n\n    switch (state) {\n      case STATE.ROTATE:\n        if (scope.enableRotate === false) return;\n        handleMouseMoveRotate(event);\n        break;\n\n      case STATE.DOLLY:\n        if (scope.enableZoom === false) return;\n        handleMouseMoveDolly(event);\n        break;\n\n      case STATE.PAN:\n        if (scope.enablePan === false) return;\n        handleMouseMovePan(event);\n        break;\n    }\n  }\n\n  function onMouseUp(event) {\n    if (scope.enabled === false) return;\n    handleMouseUp(event);\n    document.removeEventListener('mousemove', onMouseMove, false);\n    document.removeEventListener('mouseup', onMouseUp, false);\n    scope.dispatchEvent(endEvent);\n    state = STATE.NONE;\n  }\n\n  function onMouseWheel(event) {\n    if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) return;\n    event.preventDefault();\n    event.stopPropagation();\n    scope.dispatchEvent(startEvent);\n    handleMouseWheel(event);\n    scope.dispatchEvent(endEvent);\n  }\n\n  function onKeyDown(event) {\n    if (scope.enabled === false || scope.enableKeys === false || scope.enablePan === false) return;\n    handleKeyDown(event);\n  }\n\n  function onTouchStart(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault();\n\n    switch (event.touches.length) {\n      case 1:\n        switch (scope.touches.ONE) {\n          case THREE.TOUCH.ROTATE:\n            if (scope.enableRotate === false) return;\n            handleTouchStartRotate(event);\n            state = STATE.TOUCH_ROTATE;\n            break;\n\n          case THREE.TOUCH.PAN:\n            if (scope.enablePan === false) return;\n            handleTouchStartPan(event);\n            state = STATE.TOUCH_PAN;\n            break;\n\n          default:\n            state = STATE.NONE;\n        }\n\n        break;\n\n      case 2:\n        switch (scope.touches.TWO) {\n          case THREE.TOUCH.DOLLY_PAN:\n            if (scope.enableZoom === false && scope.enablePan === false) return;\n            handleTouchStartDollyPan(event);\n            state = STATE.TOUCH_DOLLY_PAN;\n            break;\n\n          case THREE.TOUCH.DOLLY_ROTATE:\n            if (scope.enableZoom === false && scope.enableRotate === false) return;\n            handleTouchStartDollyRotate(event);\n            state = STATE.TOUCH_DOLLY_ROTATE;\n            break;\n\n          default:\n            state = STATE.NONE;\n        }\n\n        break;\n\n      default:\n        state = STATE.NONE;\n    }\n\n    if (state !== STATE.NONE) {\n      scope.dispatchEvent(startEvent);\n    }\n  }\n\n  function onTouchMove(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault();\n    event.stopPropagation();\n\n    switch (state) {\n      case STATE.TOUCH_ROTATE:\n        if (scope.enableRotate === false) return;\n        handleTouchMoveRotate(event);\n        scope.update();\n        break;\n\n      case STATE.TOUCH_PAN:\n        if (scope.enablePan === false) return;\n        handleTouchMovePan(event);\n        scope.update();\n        break;\n\n      case STATE.TOUCH_DOLLY_PAN:\n        if (scope.enableZoom === false && scope.enablePan === false) return;\n        handleTouchMoveDollyPan(event);\n        scope.update();\n        break;\n\n      case STATE.TOUCH_DOLLY_ROTATE:\n        if (scope.enableZoom === false && scope.enableRotate === false) return;\n        handleTouchMoveDollyRotate(event);\n        scope.update();\n        break;\n\n      default:\n        state = STATE.NONE;\n    }\n  }\n\n  function onTouchEnd(event) {\n    if (scope.enabled === false) return;\n    handleTouchEnd(event);\n    scope.dispatchEvent(endEvent);\n    state = STATE.NONE;\n  }\n\n  function onContextMenu(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault();\n  } //\n\n\n  scope.domElement.addEventListener('contextmenu', onContextMenu, false);\n  scope.domElement.addEventListener('mousedown', onMouseDown, false);\n  scope.domElement.addEventListener('wheel', onMouseWheel, false);\n  scope.domElement.addEventListener('touchstart', onTouchStart, false);\n  scope.domElement.addEventListener('touchend', onTouchEnd, false);\n  scope.domElement.addEventListener('touchmove', onTouchMove, false);\n  scope.domElement.addEventListener('keydown', onKeyDown, false); // make sure element can receive keys.\n\n  if (scope.domElement.tabIndex === -1) {\n    scope.domElement.tabIndex = 0;\n  } // force an update at start\n\n\n  this.update();\n};\n\nTHREE.OrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls; // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nTHREE.MapControls = function (object, domElement) {\n  THREE.OrbitControls.call(this, object, domElement);\n  this.mouseButtons.LEFT = THREE.MOUSE.PAN;\n  this.mouseButtons.RIGHT = THREE.MOUSE.ROTATE;\n  this.touches.ONE = THREE.TOUCH.PAN;\n  this.touches.TWO = THREE.TOUCH.DOLLY_ROTATE;\n};\n\nTHREE.MapControls.prototype = Object.create(THREE.EventDispatcher.prototype);\nTHREE.MapControls.prototype.constructor = THREE.MapControls;\n/* three-orbitcontrols addendum */\n\nmodule.exports = exports.default = THREE.OrbitControls;","map":{"version":3,"sources":["/home/neuromancer/projects/YodaTeam/frontend/geetech/node_modules/three-orbitcontrols/OrbitControls.js"],"names":["THREE","require","OrbitControls","object","domElement","undefined","console","warn","document","error","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","update","state","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","sub","applyQuaternion","setFromVector3","rotateLeft","getAutoRotationAngle","sphericalDelta","max","min","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","type","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyIn","dollyScale","dollyOut","handleMouseDownRotate","event","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","subVectors","x","y","handleMouseMoveDolly","handleMouseMovePan","handleMouseUp","handleMouseWheel","handleKeyDown","needsUpdate","keyCode","preventDefault","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","handleTouchEnd","focus","window","button","ctrlKey","metaKey","shiftKey","addEventListener","stopPropagation","DOLLY_ROTATE","tabIndex","prototype","Object","create","EventDispatcher","constructor","MapControls","call","module","exports","default"],"mappings":"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","sourcesContent":["/* three-orbitcontrols addendum */ var THREE = require('three');\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n * @author ScieCode / http://github.com/sciecode\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nTHREE.OrbitControls = function ( object, domElement ) {\n\n\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\tthis.object = object;\n\tthis.domElement = domElement;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new THREE.Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.05;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.panSpeed = 1.0;\n\tthis.screenSpacePanning = false; // if true, pan in screen-space\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { LEFT: THREE.MOUSE.ROTATE, MIDDLE: THREE.MOUSE.DOLLY, RIGHT: THREE.MOUSE.PAN };\n\n\t// Touch fingers\n\tthis.touches = { ONE: THREE.TOUCH.ROTATE, TWO: THREE.TOUCH.DOLLY_PAN };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new THREE.Vector3();\n\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t} else {\n\n\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t}\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t}\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.domElement.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = {\n\t\tNONE: - 1,\n\t\tROTATE: 0,\n\t\tDOLLY: 1,\n\t\tPAN: 2,\n\t\tTOUCH_ROTATE: 3,\n\t\tTOUCH_PAN: 4,\n\t\tTOUCH_DOLLY_PAN: 5,\n\t\tTOUCH_DOLLY_ROTATE: 6\n\t};\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new THREE.Spherical();\n\tvar sphericalDelta = new THREE.Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new THREE.Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new THREE.Vector2();\n\tvar rotateEnd = new THREE.Vector2();\n\tvar rotateDelta = new THREE.Vector2();\n\n\tvar panStart = new THREE.Vector2();\n\tvar panEnd = new THREE.Vector2();\n\tvar panDelta = new THREE.Vector2();\n\n\tvar dollyStart = new THREE.Vector2();\n\tvar dollyEnd = new THREE.Vector2();\n\tvar dollyDelta = new THREE.Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t}\n\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement;\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( /*event*/ ) {\n\n\t\t// no-op\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\tvar needsUpdate = false;\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.update();\n\n\t\t}\n\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\trotateStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartPan( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartDolly( event ) {\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyStart.set( 0, distance );\n\n\t}\n\n\tfunction handleTouchStartDollyPan( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\tif ( scope.enablePan ) handleTouchStartPan( event );\n\n\t}\n\n\tfunction handleTouchStartDollyRotate( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\trotateEnd.set( x, y );\n\n\t\t}\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t}\n\n\tfunction handleTouchMovePan( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanEnd.set( x, y );\n\n\t\t}\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t}\n\n\tfunction handleTouchMoveDolly( event ) {\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyEnd.set( 0, distance );\n\n\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\tdollyIn( dollyDelta.y );\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t}\n\n\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t}\n\n\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t}\n\n\tfunction handleTouchEnd( /*event*/ ) {\n\n\t\t// no-op\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\t// Prevent the browser from scrolling.\n\n\t\tevent.preventDefault();\n\n\t\t// Manually set the focus since calling preventDefault above\n\t\t// prevents the browser from setting it automatically.\n\n\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase 0:\n\n\t\t\t\tswitch ( scope.mouseButtons.LEFT ) {\n\n\t\t\t\t\tcase THREE.MOUSE.ROTATE:\n\n\t\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.MOUSE.PAN:\n\n\t\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\n\t\t\tcase 1:\n\n\t\t\t\tswitch ( scope.mouseButtons.MIDDLE ) {\n\n\t\t\t\t\tcase THREE.MOUSE.DOLLY:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\n\t\t\t\tswitch ( scope.mouseButtons.RIGHT ) {\n\n\t\t\t\t\tcase THREE.MOUSE.ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.MOUSE.PAN:\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tscope.dispatchEvent( startEvent );\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\n\n\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\tcase THREE.TOUCH.ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.TOUCH.PAN:\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\n\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\tcase THREE.TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleTouchStartDollyRotate( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\tscope.domElement.addEventListener( 'keydown', onKeyDown, false );\n\n\t// make sure element can receive keys.\n\n\tif ( scope.domElement.tabIndex === - 1 ) {\n\n\t\tscope.domElement.tabIndex = 0;\n\n\t}\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nTHREE.OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nTHREE.MapControls = function ( object, domElement ) {\n\n\tTHREE.OrbitControls.call( this, object, domElement );\n\n\tthis.mouseButtons.LEFT = THREE.MOUSE.PAN;\n\tthis.mouseButtons.RIGHT = THREE.MOUSE.ROTATE;\n\n\tthis.touches.ONE = THREE.TOUCH.PAN;\n\tthis.touches.TWO = THREE.TOUCH.DOLLY_ROTATE;\n\n};\n\nTHREE.MapControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nTHREE.MapControls.prototype.constructor = THREE.MapControls;\n/* three-orbitcontrols addendum */ module.exports = exports.default = THREE.OrbitControls;\n"]},"metadata":{},"sourceType":"script"}