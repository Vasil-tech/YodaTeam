{"ast":null,"code":"import errorHandler from '../scripts/errorHandler.js';\nimport threeLogic from '../scripts/Three/threeLogic.js';\nimport * as THREE from 'three';\nexport default {\n  data() {\n    return {\n      color: \"purple\",\n      OrbitControl: false\n    };\n  },\n\n  methods: {},\n  mounted: function () {\n    start3d(THREE);\n  },\n  created: {\n    function() {\n      this.emitter.on(\"SceneBackgroundColor\", color => {\n        start3d(THREE, color);\n      });\n    },\n\n    function() {\n      this.emitter.on(\"OrbitControlStatus\", orbValue => {\n        start3d(THREE, orbValue);\n      });\n    }\n\n  }\n};\n\nfunction start3d(THREE, color = 'black', orbCont) {\n  try {\n    //создание экземпляров \n    const answ = new threeLogic(THREE, color);\n    console.log(answ);\n    console.log(orbCont);\n  } catch (e) {\n    errorHandler('ThreeContainer', 'mounted', e, 'canvas');\n  }\n} // window.onresize = function(){\n//     try{\n//             const answ = new threeLogic(THREE)\n//             console.log(answ)\n//             }\n//         catch(e){\n//             errorHandler('ThreeContainer', 'onresize', e, 'canvas')\n//         }\n// }","map":{"version":3,"mappings":"AASA,OAAOA,YAAP,MAAyB,4BAAzB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,eAAe;AACXC,MAAI,GAAE;AACF,WAAM;AACFC,WAAK,EAAE,QADL;AAEFC,kBAAY,EAAE;AAFZ,KAAN;AAIH,GANU;;AAOXC,SAAO,EAAC,EAPG;AAUXC,SAAO,EAAE,YAAU;AACfC,WAAO,CAACN,KAAD,CAAP;AACH,GAZU;AAaXO,SAAO,EAAC;AAAEC,YAAQ,GAAE;AAChB,WAAKC,OAAL,CAAaC,EAAb,CAAgB,sBAAhB,EAAwCR,KAAI,IAAK;AAC7CI,eAAO,CAACN,KAAD,EAAQE,KAAR,CAAP;AACH,OAFD;AAGH,KAJO;;AAKRM,YAAQ,GAAE;AACN,WAAKC,OAAL,CAAaC,EAAb,CAAgB,oBAAhB,EAAsCC,QAAO,IAAI;AAC7CL,eAAO,CAACN,KAAD,EAAQW,QAAR,CAAP;AACH,OAFD;AAGH;;AATO;AAbG,CAAf;;AAyBA,SAASL,OAAT,CAAiBN,KAAjB,EAAwBE,KAAI,GAAI,OAAhC,EAAyCU,OAAzC,EAAiD;AAC7C,MAAG;AACC;AACA,UAAMC,IAAG,GAAI,IAAId,UAAJ,CAAeC,KAAf,EAAsBE,KAAtB,CAAb;AACAY,WAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,WAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,GALJ,CAMA,OAAMI,CAAN,EAAQ;AACJlB,gBAAY,CAAC,gBAAD,EAAmB,SAAnB,EAA8BkB,CAA9B,EAAiC,QAAjC,CAAZ;AACJ;AACJ,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","names":["errorHandler","threeLogic","THREE","data","color","OrbitControl","methods","mounted","start3d","created","function","emitter","on","orbValue","orbCont","answ","console","log","e"],"sourceRoot":"","sources":["/home/neuromancer/projects/YodaTeam/frontend/geetech/src/components/Blocks/WorkAreaContainer/ThreeContainer.vue"],"sourcesContent":["<template>\n    <div class=\"threeContainerRoot\">\n        <div class=\"canvasContainer\">\n            <canvas id=\"canvas\"></canvas>\n        </div>\n    </div>\n</template>\n\n<script>\nimport errorHandler from '../scripts/errorHandler.js';\nimport threeLogic from '../scripts/Three/threeLogic.js'\nimport * as THREE from 'three'\n\nexport default {\n    data(){\n        return{\n            color: \"purple\",\n            OrbitControl: false,\n        }\n    },\n    methods:{\n\n    },\n    mounted: function(){\n        start3d(THREE)\n    },\n    created:{ function(){\n        this.emitter.on(\"SceneBackgroundColor\", color => {\n            start3d(THREE, color)\n        })\n    },\n    function(){\n        this.emitter.on(\"OrbitControlStatus\", orbValue =>{\n            start3d(THREE, orbValue)\n        })\n    }}\n}\n\nfunction start3d(THREE, color = 'black', orbCont){\n    try{\n        //создание экземпляров \n        const answ = new threeLogic(THREE, color)\n        console.log(answ)\n        console.log(orbCont)\n        }\n    catch(e){\n        errorHandler('ThreeContainer', 'mounted', e, 'canvas')\n    }\n}\n\n\n// window.onresize = function(){\n//     try{\n//             const answ = new threeLogic(THREE)\n//             console.log(answ)\n//             }\n//         catch(e){\n//             errorHandler('ThreeContainer', 'onresize', e, 'canvas')\n//         }\n// }\n</script>\n\n<style>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}