{"ast":null,"code":"export default {\n  data() {\n    return {};\n  },\n\n  methods: {\n    changeColor(color) {\n      try {\n        this.emitter.emit(\"SceneBackgroundColor\", color);\n      } catch (e) {\n        this.emitter.emit(\"CanvasError\", {\n          '': 23\n        });\n      }\n    },\n\n    orbContChecked(orbValue) {\n      try {\n        this.emitter.emit(\"OrbitControlStatus\", orbValue);\n      } catch (e) {\n        console.log('fuckingFuck');\n      }\n    },\n\n    fullScreen() {\n      try {\n        this.emitter.emit('FullScreenCanvas', true);\n      } catch (e) {\n        console.log('assssssssssssssss');\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA4BA,eAAc;AACVA,MAAI,GAAE;AACF,WAAM,EAAN;AAGH,GALS;;AAMVC,SAAO,EAAC;AACJC,eAAW,CAACC,KAAD,EAAO;AACd,UAAG;AACC,aAAKC,OAAL,CAAaC,IAAb,CAAkB,sBAAlB,EAA0CF,KAA1C;AACJ,OAFA,CAGA,OAAMG,CAAN,EAAQ;AACJ,aAAKF,OAAL,CAAaC,IAAb,CAAkB,aAAlB,EAAiC;AAAC,cAAI;AAAL,SAAjC;AACJ;AACH,KARG;;AASJE,kBAAc,CAACC,QAAD,EAAU;AACpB,UAAG;AACC,aAAKJ,OAAL,CAAaC,IAAb,CAAkB,oBAAlB,EAAwCG,QAAxC;AACJ,OAFA,CAGA,OAAMF,CAAN,EAAQ;AACJG,eAAO,CAACC,GAAR,CAAY,aAAZ;AACJ;AACH,KAhBG;;AAiBJC,cAAU,GAAE;AACR,UAAG;AACC,aAAKP,OAAL,CAAaC,IAAb,CAAkB,kBAAlB,EAAsC,IAAtC;AACJ,OAFA,CAGA,OAAMC,CAAN,EAAQ;AACJG,eAAO,CAACC,GAAR,CAAY,mBAAZ;AACJ;AACJ;;AAxBI;AANE,CAAd","names":["data","methods","changeColor","color","emitter","emit","e","orbContChecked","orbValue","console","log","fullScreen"],"sourceRoot":"","sources":["/home/neuromancer/projects/YodaTeam/frontend/geetech/src/components/Blocks/ToolPanelContainer/Editor/EditParamContainer/SceneParam.vue"],"sourcesContent":["<template>\n    <div class=\"SceneParamRoot\">\n        <div class=\"backColor\">\n            <p>Смена цвета фона сцены</p>\n            <div class=\"colorBar\">\n                <button @click=\"changeColor('grey')\">серый</button>\n                <button @click=\"changeColor('red')\">красный</button>\n                <button @click=\"changeColor('white')\">белый</button>\n            </div>\n        </div>\n        <div class=\"orbControl\">\n            <input \n            type=\"checkbox\" \n            id=\"checkbox\" \n            v-model=\"checked\" \n            :value=\"checkboxVal\"\n            :checked=\"booleanValue\"\n            @input=\"orbContChecked(!checked)\"\n            >\n            <label for=\"checkbox\">Включить orbit control</label>\n        </div>\n        <div class=\"fullScreenButt\">\n            <button @click=\"fullScreen()\">Открыть на весь экран</button>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default{\n    data(){\n        return{\n            \n        }\n    },\n    methods:{\n        changeColor(color){\n            try{\n                this.emitter.emit(\"SceneBackgroundColor\", color);\n            }\n            catch(e){\n                this.emitter.emit(\"CanvasError\", {'': 23})\n            }\n        },\n        orbContChecked(orbValue){\n            try{\n                this.emitter.emit(\"OrbitControlStatus\", orbValue)\n            }\n            catch(e){\n                console.log('fuckingFuck')\n            }\n        },\n        fullScreen(){\n            try{\n                this.emitter.emit('FullScreenCanvas', true)\n            }\n            catch(e){\n                console.log('assssssssssssssss')\n            }\n        }\n    }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}