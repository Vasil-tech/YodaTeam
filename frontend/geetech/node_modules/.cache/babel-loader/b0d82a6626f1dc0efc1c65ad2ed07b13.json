{"ast":null,"code":"import errorHandler from '../scripts/errorHandler.js';\nimport threeLogic from '../scripts/Three/threeLogic.js';\nimport * as THREE from 'three'; //import {OrbitControl} from 'three-orbitcontrols'\n\nexport default {\n  data() {\n    return {\n      color: \"black\",\n      OrbitControl: false\n    };\n  },\n\n  methods: {},\n  mounted: function () {\n    start3d(THREE); //console.log(OrbitControl)\n  },\n  created: function () {\n    this.emitter.on(\"SceneBackgroundColor\", color => {\n      start3d(THREE, color), this.color = color;\n    });\n    this.emitter.on(\"OrbitControlStatus\", orbValue => {\n      start3d(THREE, this.color, orbValue);\n    });\n  }\n};\n\nfunction start3d(THREE, color = 'black', orbCont = false) {\n  try {\n    if (orbCont == true) {\n      orbCont = new THREE.OrbitControl();\n    } //создание экземпляров \n\n\n    const answ = new threeLogic(THREE, color, orbCont);\n    console.log(answ, orbCont);\n  } catch (e) {\n    errorHandler('ThreeContainer', 'mounted', e, 'canvas');\n  }\n} // window.onresize = function(){\n//     try{\n//             const answ = new threeLogic(THREE)\n//             console.log(answ)\n//             }\n//         catch(e){\n//             errorHandler('ThreeContainer', 'onresize', e, 'canvas')\n//         }\n// }","map":{"version":3,"mappings":"AASA,OAAOA,YAAP,MAAyB,4BAAzB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CACA;;AACA,eAAe;AACXC,MAAI,GAAE;AACF,WAAM;AACFC,WAAK,EAAE,OADL;AAEFC,kBAAY,EAAE;AAFZ,KAAN;AAIH,GANU;;AAOXC,SAAO,EAAC,EAPG;AAUXC,SAAO,EAAE,YAAU;AACfC,WAAO,CAACN,KAAD,CAAP,CADe,CAEf;AACH,GAbU;AAcXO,SAAO,EAAE,YAAU;AACf,SAAKC,OAAL,CAAaC,EAAb,CAAgB,sBAAhB,EAAwCP,KAAI,IAAK;AAC7CI,aAAO,CAACN,KAAD,EAAQE,KAAR,CAAP,EAAuB,KAAKA,KAAL,GAAYA,KAAnC;AACH,KAFD;AAGA,SAAKM,OAAL,CAAaC,EAAb,CAAgB,oBAAhB,EAAsCC,QAAO,IAAI;AAC7CJ,aAAO,CAACN,KAAD,EAAQ,KAAKE,KAAb,EAAoBQ,QAApB,CAAP;AACH,KAFD;AAGJ;AArBW,CAAf;;AAwBA,SAASJ,OAAT,CAAiBN,KAAjB,EAAwBE,KAAI,GAAI,OAAhC,EAAyCS,OAAO,GAAC,KAAjD,EAAuD;AACnD,MAAG;AACC,QAAGA,OAAM,IAAK,IAAd,EAAmB;AACfA,aAAM,GAAI,IAAIX,KAAK,CAACG,YAAV,EAAV;AACJ,KAHD,CAIC;;;AACA,UAAMS,IAAG,GAAI,IAAIb,UAAJ,CAAeC,KAAf,EAAsBE,KAAtB,EAA6BS,OAA7B,CAAb;AACAE,WAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkBD,OAAlB;AACA,GAPJ,CAQA,OAAMI,CAAN,EAAQ;AACJjB,gBAAY,CAAC,gBAAD,EAAmB,SAAnB,EAA8BiB,CAA9B,EAAiC,QAAjC,CAAZ;AACJ;AACJ,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","names":["errorHandler","threeLogic","THREE","data","color","OrbitControl","methods","mounted","start3d","created","emitter","on","orbValue","orbCont","answ","console","log","e"],"sourceRoot":"","sources":["/home/neuromancer/projects/YodaTeam/frontend/geetech/src/components/Blocks/WorkAreaContainer/ThreeContainer.vue"],"sourcesContent":["<template>\n    <div class=\"threeContainerRoot\">\n        <div class=\"canvasContainer\">\n            <canvas id=\"canvas\"></canvas>\n        </div>\n    </div>\n</template>\n\n<script>\nimport errorHandler from '../scripts/errorHandler.js';\nimport threeLogic from '../scripts/Three/threeLogic.js'\nimport * as THREE from 'three'\n//import {OrbitControl} from 'three-orbitcontrols'\nexport default {\n    data(){\n        return{\n            color: \"black\",\n            OrbitControl: false,\n        }\n    },\n    methods:{\n\n    },\n    mounted: function(){\n        start3d(THREE)\n        //console.log(OrbitControl)\n    },\n    created: function(){\n        this.emitter.on(\"SceneBackgroundColor\", color => {\n            start3d(THREE, color), this.color= color\n        })\n        this.emitter.on(\"OrbitControlStatus\", orbValue =>{\n            start3d(THREE, this.color, orbValue)\n        })\n    }\n}\n\nfunction start3d(THREE, color = 'black', orbCont=false){\n    try{\n        if(orbCont == true){\n            orbCont = new THREE.OrbitControl\n        }\n        //создание экземпляров \n        const answ = new threeLogic(THREE, color, orbCont)\n        console.log(answ, orbCont)\n        }\n    catch(e){\n        errorHandler('ThreeContainer', 'mounted', e, 'canvas')\n    }\n}\n\n\n// window.onresize = function(){\n//     try{\n//             const answ = new threeLogic(THREE)\n//             console.log(answ)\n//             }\n//         catch(e){\n//             errorHandler('ThreeContainer', 'onresize', e, 'canvas')\n//         }\n// }\n</script>\n\n<style>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}